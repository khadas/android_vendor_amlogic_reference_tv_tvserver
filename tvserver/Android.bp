// Copyright (c) 2014 Amlogic, Inc. All rights reserved.
//
// This source code is subject to the terms and conditions defined in the
// file 'LICENSE' which is part of this source code package.
//
// Description: makefile

//DVB_PATH := $(wildcard external/dvb)
//ifeq ($(DVB_PATH), )
//  DVB_PATH := $(wildcard $(BOARD_AML_VENDOR_PATH)/external/dvb)
//endif
//ifeq ($(DVB_PATH), )
//  DVB_PATH := $(wildcard $(BOARD_AML_VENDOR_PATH)/dvb)
//endif

//LIB_ZVBI_PATH := $(wildcard external/libzvbi)
//ifeq ($(LIB_ZVBI_PATH), )
//  LIB_ZVBI_PATH := $(wildcard $(BOARD_AML_VENDOR_PATH)/external/libzvbi)
//endif

////////LIB_TV_UTILS = [LOCAL_PATH + "/../tvutils"]
///////LIB_TV_BINDER = [LOCAL_PATH + "/../../frameworks/libtvbinder"]

//AM_LIBPLAYER_PATH := $(wildcard $(BOARD_AML_VENDOR_PATH)/frameworks/av/LibPlayer)
//LIB_SQLITE_PATH := $(wildcard external/sqlite)

//tvserver

//ifeq ($(wildcard hardware/amlogic/media),hardware/amlogic/media)
// ANDROIDMK TRANSLATION ERROR: unsupported line
// $(info "have hardware/amlogic/media")

//AML_DEC_PATH := $(wildcard hardware/amlogic/media)

//else
//AML_DEC_PATH := $(wildcard $(BOARD_AML_VENDOR_PATH)/frameworks/av/LibPlayer)

//endif

//LOCAL_CFLAGS += -DTARGET_BOARD_$(strip $(TVAPI_TARGET_BOARD_VERSION))

//DVB define
// ANDROIDMK TRANSLATION ERROR: unsupported conditional
// ifeq ($(BOARD_HAS_ADTV),true)

//ifeq (,$(wildcard $(LOCAL_PATH)/../../../../external/libzvbi))
//LIBZVBI_C_INCLUDES:=vendor/amlogic/common/prebuilt/libzvbi/include
//else
//LIBZVBI_C_INCLUDES:=vendor/amlogic/common/external/libzvbi/src
//endif

//ifeq (,$(wildcard $(LOCAL_PATH)/../../../../external/dvb))
//DVB_C_INCLUDES:=vendor/amlogic/common/prebuilt/dvb/include/am_adp \
//  vendor/amlogic/common/prebuilt/dvb/include/am_mw \
//  vendor/amlogic/common/prebuilt/dvb/include/am_ver \
//  vendor/amlogic/common/prebuilt/dvb/ndk/include
//else


// *** THIS PACKAGE HAS SPECIAL LICENSING CONDITIONS.  PLEASE
//     CONSULT THE OWNERS AND opensource-licensing@google.com BEFORE
//     DEPENDING ON IT IN YOUR PROJECT. ***
package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "vendor_amlogic_common_tv_tvserver_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    //   SPDX-license-identifier-FTL
    //   SPDX-license-identifier-GPL
    //   SPDX-license-identifier-LGPL-2.1
    //   SPDX-license-identifier-MIT
    //   legacy_by_exception_only (by exception only)
    //   legacy_notice
    default_applicable_licenses: ["vendor_amlogic_common_tv_tvserver_license"],
}

cc_binary {
    name: "tvserver",
    proprietary: true,
    compile_multilib: "32",

    arch: {
        x86: {
            enabled: false,
        },
        x86_64: {
            enabled: false,
        },
    },

    srcs: [
        "main_tvserver.cpp",
        "DroidTvServer.cpp",
        "DroidTvServiceIntf.cpp",
        "MemoryLeakTrackUtil.cpp",
    ],

    shared_libs: [
        "vendor.amlogic.hardware.tvserver@1.0",
        "vendor.amlogic.hardware.systemcontrol@1.0",
        "vendor.amlogic.hardware.systemcontrol@1.1",
        "libbase",
        "libhidlbase",
        "libhidlmemory",
        //"libhidltransport",
        "android.hidl.allocator@1.0",
        "libutils",
        "libbinder",
        "libcutils",
        "liblog",
        "libtvbinder",
        "libtv",
        "libsqlite",
        "libam_mw",
        //"libzvbi",
        "libam_adp",
        "libam_ver",
        "libsystemcontrolservice",
        "libpqcontrol",
        "libicuuc_vendor",
        "libmediahal_tsplayer",
        "libamdvr",
	"libvideotunnel",
    ],

    include_dirs: [
        "system/libhidl/transport/include/hidl",
        "frameworks/av/include",
        "external/jsoncpp/include",
        "vendor/amlogic/reference/libdvr/include",
        "vendor/amlogic/common/mediahal_sdk/include",
        "hardware/amlogic/media/amcodec/include",
    ],

    header_libs: [
        "libaudioclient_headers",
        "libhardware_legacy_headers",
        "libhardware_headers",
        "libam_dvb_headers",
    ],
    static_libs: [
        "libzvbi_static",
        "libtv_utils",
        "libjsoncpp",
    ],

    cflags: ["-DSUPPORT_ADTV"],

    init_rc: ["tvserver.rc"],
    vintf_fragments: ["manifest_tv.xml"],

}
